package com.example.patterns.Factory;

public abstract class Car {
    public abstract void drive();
}

/*
    У цьому прикладі є два основні елементи: клас Car і фабричний клас Factory.

    Абстрактний клас Car - базовий клас для всіх типів автомобілів.
    У ньому є один абстрактний метод drive(), який потрібно реалізувати
    в підкласах. Це дає можливість кожному конкретному типу автомобіля
    визначити свою унікальну поведінку при їзді.

    Конкретні класи Muscle, Sport та Jeep - класи розширюють абстрактний клас
    Car і реалізують його абстрактний метод drive(). Кожен з цих класів представляє
    різний тип автомобіля.

    Фабричний клас Factory - клас відповідає за створення об'єктів автомобілів.
    Він має метод createCar(), який приймає тип автомобіля як аргумент і повертає
    об'єкт відповідного типу. Використовуючи цей метод, ми можемо створити об'єкти
    автомобілів, не знаючи конкретного класу кожного автомобіля.

    У методі main() класу Main ми створюємо екземпляри класу Factory і викликаємо його
    метод createCar(), передаючи тип автомобіля як аргумент. Після цього ми викликаємо
    метод drive() для кожного створеного автомобіля, щоб переконатися, що він працює
    належним чином.

    Таким чином, можна створювати різні типи автомобілів, використовуючи лише фабричний метод,
    без прив'язки до конкретних класів цих автомобілів.
*/

/*
    Абстрактний клас - це клас, який має хоча б один абстрактний метод.
    Абстрактний метод - це метод без реалізації, тобто він має лише сигнатуру методу,
    але не має тіла. Абстрактний клас може також містити конкретні методи, які мають
    реалізацію.

    Абстракція - це процес виділення головних характеристик об'єкта або явища і
    ігнорування деталей, які не є необхідними для поточного контексту.
    Основна ціль абстракції - спростити складність, роблячи модель більш зрозумілою
    і легко змінюваною.

    У випадку з абстрактним класом Car, ми абстрагуємо (або узагальнюємо) концепцію автомобіля,
    визначаючи лише основну функціональність, яка є загальною для всіх автомобілів, тобто метод drive().
    Кожен конкретний тип автомобіля може мати свою власну реалізацію цього методу, відображаючи
    унікальність кожного типу автомобіля.

    Головна мета абстракції в даному випадку полягає в тому, щоб ізолювати спільну функціональність
    автомобіля і надати можливість розширення функціоналу шляхом додавання нових типів автомобілів
    без зміни основної логіки програми. Такий підхід робить код більш модульним, підтримуваним і
    легко зрозумілим.
*/